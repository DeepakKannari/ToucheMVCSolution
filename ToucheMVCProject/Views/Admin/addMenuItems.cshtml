@model ToucheMVCProject.Models.menuViewModel

@{
    ViewBag.Title = "addMenuItems";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>addMenuItems</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Menu</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.restaurantId, "restaurantId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("restaurantId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.restaurantId, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.restaurantId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.restaurantId, new SelectList(ViewBag.ids, "Value", "Text"), "Restaurant Id", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.restaurantId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.menuItemId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.menuItemId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Menu-Item Id" } })
            @Html.ValidationMessageFor(model => model.menuItemId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dishName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dishName, new { htmlAttributes = new { @class = "form-control", @placeholder = " Dish Name" } })
            @Html.ValidationMessageFor(model => model.dishName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @placeholder = " Description" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.vtype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vtype, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vtype, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.vtype, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.vtype, new SelectList(ViewBag.type, "Value", "Text"), "Veg/NON-Veg", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.vtype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cuisinetype, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cuisinetype, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cuisine Type" } })
            @Html.ValidationMessageFor(model => model.cuisinetype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Price" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control", @placeholder = "Image Url" } })
            @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
            <p class="text-danger">@ViewBag.exception</p>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
